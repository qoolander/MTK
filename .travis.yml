language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=bionic
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    - CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=true

matrix:
  include:
    - os: linux
      dist: bionic
      sudo: true
      compiler: gcc
      addons:
        apt:
          packages: &bionic_latest_boost_packages
            - gcc
            - g++
            - clang
            - valgrind
            # Misc
            - python-yaml
            - doxygen
          sources: &bionic_latest_boost_sources
            - ubuntu-toolchain-r-test

before_install:
  # Combine global build options with OS/compiler-dependent options
  - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
  - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
  - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
  - echo ${PATH}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v
  - sudo pip install codecov
  - sudo pip install gcovr
script:
  ############################################################################
  # Build main and tests
  ############################################################################
  - mkdir -p build
  - cd build
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=release -DBUILD_TESTS=ON -DBUILD_DOCS=OFF ..
  - cd ./../
  - cmake --build build --target all -- -j 4
  - cmake --build build --target generateCoverage -- -j 4


after_success:
  - bash <(curl -s https://codecov.io/bash)
